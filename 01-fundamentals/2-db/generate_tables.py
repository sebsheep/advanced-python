"""
This modules produces big tables
"""

import random
import string
import cities

# Realistic names for random samples
names = [
    "Sophia",
    "Jackson",
    "Olivia",
    "Liam",
    "Emma",
    "Noah",
    "Ava",
    "Aiden",
    "Isabella",
    "Lucas",
    "Mia",
    "Ethan",
    "Amelia",
    "Mason",
    "Harper",
    "Logan",
    "Evelyn",
    "Jacob",
    "Abigail",
    "Elijah",
    "Charlotte",
    "Carter",
    "Emily",
    "James",
    "Scarlett",
    "Alexander",
    "Madison",
    "Michael",
    "Luna",
    "Benjamin",
    "Grace",
    "Daniel",
    "Chloe",
    "Henry",
    "Lily",
    "Sebastian",
    "Aria",
    "Matthew",
    "Ella",
    "Jack",
    "Nora",
    "William",
    "Mila",
    "Jayden",
    "Avery",
    "Wyatt",
    "Eleanor",
    "Owen",
    "Hannah",
    "Oscar",
    "Penelope",
    "Joseph",
    "Addison",
    "Levi",
    "Victoria",
    "David",
    "Camila",
    "Luke",
    "Stella",
    "Samuel",
    "Sofia",
    "Lincoln",
    "Nova",
    "John",
    "Zoey",
    "Gabriel",
    "Layla",
    "Anthony",
    "Hazel",
    "Isaac",
    "Zoe",
    "Grayson",
    "Audrey",
    "Julian",
    "Brooklyn",
    "Christopher",
    "Savannah",
    "Joshua",
    "Claire",
    "Andrew",
    "Skylar",
    "Theodore",
    "Bella",
    "Caleb",
    "Aurora",
    "Ryan",
    "Lucy",
    "Asher",
    "Anna",
    "Nathan",
    "Leah",
    "Thomas",
    "Paisley",
    "Leo",
    "Ellie",
    "Hunter",
    "Violet",
    "Christian",
    "Natalie",
    "Eli",
    "Emilia",
    "Jonathan",
    "Everly",
    "Connor",
    "Aaliyah",
    "Landon",
    "Elena",
    "Adrian",
    "Naomi",
    "Aaron",
    "Caroline",
    "Charles",
    "Valentina",
    "Jaxon",
    "Ruby",
    "Cameron",
    "Alice",
    "Jordan",
    "Genesis",
    "Ezekiel",
    "Katherine",
    "Colton",
    "Julia",
    "Angel",
    "Riley",
    "Miles",
    "Sophie",
    "Dominic",
    "Samantha",
    "Austin",
    "Willow",
    "Ian",
    "Nevaeh",
    "Adam",
    "Eva",
    "Nolan",
    "Sadie",
    "Jose",
    "Isabelle",
    "Elias",
    "Lillian",
    "Colin",
    "Aubrey",
    "Tyler",
    "Layla",
    "Mateo",
    "Alexa",
    "Brian",
    "Kaylee",
    "Juan",
    "Piper",
    "Kevin",
    "Delilah",
    "Chase",
    "Gianna",
    "Timothy",
    "Serenity",
    "Steven",
    "Allison",
    "Zachary",
    "Gabriella",
    "Thomas",
    "Lucia",
    "Richard",
    "Brielle",
    "Antonio",
    "Mackenzie",
    "Maddox",
    "Madeline",
    "Axel",
    "Adeline",
    "Kingston",
    "Alyssa",
    "Hayden",
    "Ariel",
    "Diego",
    "Jasmine",
    "Bennett",
    "Sarah",
    "George",
    "Melanie",
    "Brayden",
    "Bailey",
    "Jordan",
    "Isabel",
    "Jameson",
    "Amaya",
    "Oliver",
    "Leilani",
    "Evan",
    "Elise",
    "Parker",
    "Nina",
    "Leonardo",
    "Mya",
    "Sawyer",
    "Liliana",
    "Jason",
    "Amara",
    "Xavier",
    "Lauren",
    "Josiah",
    "Maria",
    "Damian",
    "Eliza",
    "Brandon",
    "Adalynn",
    "Carlos",
    "Ariana",
    "Camden",
    "Makayla",
    "Jesus",
    "Juliana",
    "Max",
    "Harmony",
    "Ivan",
    "Haven",
    "Dominick",
    "Kylie",
    "Kai",
    "Athena",
    "Alex",
    "Emery",
    "Justin",
    "Maci",
    "Juan",
    "Leia",
    "Cole",
    "Juliette",
    "Leo",
    "Callie",
    "Eduardo",
    "Isabela",
    "Brody",
    "Gabrielle",
    "Silas",
    "Willow",
    "Hudson",
    "Kinley",
    "Bentley",
    "Giuliana",
    "Tristan",
    "Alana",
    "Kayden",
    "Esther",
    "Micah",
    "Genevieve",
    "Alexis",
    "Leslie",
    "Bryson",
    "Alexandria",
    "Jace",
    "Kenzie",
    "Jayce",
    "Sienna",
    "Eric",
    "Erin",
    "Ashley",
    "Annabelle",
    "Chance",
    "Myla",
    "Emmett",
    "Rachel",
    "King",
    "Jordan",
    "Brett",
    "Giselle",
    "Caiden",
    "Ayla",
    "Jakob",
    "Londyn",
    "Finn",
    "Payton",
    "Israel",
    "Rylee",
    "Edward",
    "Brynlee",
    "Conner",
    "Emerson",
    "Arthur",
    "Julianna",
    "Alexis",
    "Anastasia",
    "Mark",
    "Ember",
    "Stephen",
    "Arianna",
    "Dallas",
    "Kamila",
    "Nash",
    "Harley",
    "Griffin",
    "Macie",
    "Iker",
    "Kailani",
    "Beckham",
    "Cecilia",
    "Felix",
    "Hope",
    "Emilio",
    "Daleyza",
    "Phoenix",
    "Diana",
    "Lane",
    "Nayeli",
    "Derrick",
    "Skyler",
    "Dakota",
    "Karina",
    "Corey",
    "Jayleen",
    "Emerson",
    "Francesca",
    "Gunner",
    "Ruth",
    "Greyson",
    "Alivia",
    "Lorenzo",
    "Hayley",
    "Archer",
    "Emely",
    "Hayes",
    "Amira",
    "Roman",
    "Virginia",
    "Brendan",
    "Liana",
    "Francisco",
    "Chanel",
    "Alexandre",
    "Holly",
    "Rowan",
    "Maliyah",
    "Luis",
    "Sasha",
    "Maximus",
    "Emersyn",
    "Lane",
    "Jaylah",
    "Preston",
    "Angelica",
    "Kingston",
    "Aniyah",
    "Bryan",
    "Yaretzi",
    "Gael",
    "Izabella",
    "Luka",
    "Cora",
    "Brooks",
    "Jazmin",
    "Amir",
    "Dayana",
    "Jared",
    "Madilyn",
    "Walter",
    "Leanna",
    "Lochlan",
    "Kiera",
    "Riley",
    "Karla",
    "August",
    "Paislee",
    "Enzo",
    "Annie",
    "Drew",
    "Janelle",
    "Johnny",
    "Elianna",
    "Kameron",
    "Kaydence",
    "Jude",
    "Anya",
    "Charlie",
    "Sage",
    "Harrison",
    "Amari",
    "Cayden",
    "Milani",
    "Killian",
    "Braelyn",
    "Dustin",
    "Jazlyn",
    "Ace",
    "Kaliyah",
    "Jesse",
    "Madelynn",
    "Cohen",
    "Scarlet",
    "Hector",
    "Rory",
    "Zane",
    "Joanna",
    "Giovanni",
    "Karlee",
    "Dante",
    "Alaina",
    "Princeton",
    "Cassandra",
    "Xander",
    "Lilian",
    "Lorenzo",
    "Kassidy",
    "Leighton",
    "Joy",
    "Walker",
    "Tenley",
    "Armando",
    "Zuri",
    "Porter",
    "Anaya",
    "Maximiliano",
    "Kailyn",
    "Roman",
    "Janiyah",
    "Barrett",
    "Mabel",
    "Cristian",
    "Adelina",
    "Major",
    "Lizbeth",
    "Keegan",
    "Amelie",
    "Tyson",
    "Saylor",
    "Adonis",
    "Remy",
    "Gideon",
    "Raegan",
    "Taylor",
    "Galilea",
    "Corbin",
    "Lina",
    "Dennis",
    "Lara",
    "Mohamed",
    "Selah",
    "Raymond",
    "Linda",
    "Ronan",
    "Mckinley",
    "Leland",
    "Rosa",
    "Knox",
    "Anne",
    "Orion",
    "Helen",
    "Kellen",
    "Tiffany",
    "Clark",
    "Mira",
    "Malik",
    "Yara",
    "Mohammed",
    "Madisyn",
    "Erick",
    "Siena",
]

occupations = [
    "Accountant",
    "Actor",
    "Actuary",
    "Administrator",
    "Architect",
    "Artist",
    "Audiologist",
    "Author",
    "Baker",
    "Barber",
    "Bartender",
    "Biologist",
    "Bookkeeper",
    "Butcher",
    "Carpenter",
    "Cashier",
    "Chef",
    "Chemist",
    "Chiropractor",
    "Clerk",
    "Coach",
    "Dancer",
    "Dentist",
    "Dietitian",
    "Doctor",
    "Electrician",
    "Engineer",
    "Firefighter",
    "Fisherman",
    "Flight Attendant",
    "Geologist",
    "Hairdresser",
    "Historian",
    "Inspector",
    "Janitor",
    "Journalist",
    "Judge",
    "Lawyer",
    "Librarian",
    "Lifeguard",
    "Manager",
    "Mechanic",
    "Musician",
    "Nurse",
    "Optometrist",
    "Painter",
    "Pharmacist",
    "Photographer",
    "Physician",
    "Pilot",
    "Plumber",
    "Police Officer",
    "Professor",
    "Programmer",
    "Psychologist",
    "Receptionist",
    "Researcher",
    "Salesperson",
    "Scientist",
    "Secretary",
    "Security Guard",
    "Social Worker",
    "Software Developer",
    "Surgeon",
    "Teacher",
    "Technician",
    "Therapist",
    "Translator",
    "Truck Driver",
    "Veterinarian",
    "Waiter/Waitress",
    "Writer",
    "Yoga Instructor",
    "Zookeeper",
]

# Realistic cities from around the world with corresponding countries
cities_and_countries = cities.cities


# Generate random samples for tables
def generate_random_tables(num_people):
    # Generate random samples for table1
    table1 = []
    for i in range(1, num_people + 1):
        city, country = random.choice(cities_and_countries)
        row = {
            "id": i,
            "name": random.choice(names),
            "age": random.randint(20, 50),
            "occupation": random.choice(occupations),
            "city_id": random.randint(1, len(cities_and_countries)),
        }
        table1.append(row)

    # Generate random samples for table2 (Cities table)
    cities_table = []
    for idx, (city, country) in enumerate(cities_and_countries):
        city_row = {"city_id": idx + 1, "city": city, "country": country}
        cities_table.append(city_row)

    return table1, cities_table


# Test the function
if __name__ == "__main__":
    num_people = 100000
    table1, cities_table = generate_random_tables(num_people)

    file = open("big_db.py", "w")
    print("people = ", table1, file=file)
    print(file=file)
    print("cities = ", cities_table, file=file)
